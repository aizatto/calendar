{"version":3,"sources":["contexts/GoogleContext.tsx","List.tsx","App.tsx","serviceWorker.ts","index.tsx","../../src/fns.ts"],"names":["GoogleContext","React","createContext","authenticated","day","Date","timeMin","dateFns","timeMax","Attendees","props","event","attendees","length","sort","a","b","displayName","email","localeCompare","declined","filter","attendee","responseStatus","attendeesElement","map","style","textDecoration","name","key","id","title","DateTime","start","dateTime","end","startDateTime","endDateTime","Intervals","elements","intervals","interval","seconds","getTime","toISOString","IntervalTime","hours","Math","floor","minutes","time","push","join","Event","hangoutButton","hangoutLink","href","locationElement","location","htmlLink","summary","dangerouslySetInnerHTML","__html","description","CalendarAuthenticated","useState","events","setEvents","useEffect","async","gapi","client","calendar","list","calendarId","maxResults","orderBy","singleEvents","result","items","eventsFiltered","status","eventsGroupBy","lodash","groupBy","days","dateStr","date","busyIntervals","aizattoDateFns","freeIntervals","eventsElements","paddingBottom","Fragment","Calendar","Consumer","App","setAuthenticated","script","document","createElement","src","defer","initClient","discoveryDocs","scope","init","apiKey","process","REACT_APP_GOOGLE_APP_ID","clientId","GoogleAuth","auth2","getAuthInstance","isSignedIn","listen","signedIn","googleUser","currentUser","get","console","log","getBasicProfile","onload","load","firstScript","getElementsByTagName","parentNode","insertBefore","Provider","value","className","Button","onClick","signOut","signIn","prompt","Container","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","newIntervals"],"mappings":"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","file":"static/js/main.f830c665.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GoogleContext = React.createContext({\n  authenticated: false,\n  // IsSignedInListener: (signedIn: boolean): void => {},\n});","import React, { useState, useEffect } from 'react';\nimport { GoogleContext } from './contexts/GoogleContext';\nimport * as dateFns from 'date-fns';\nimport lodash from 'lodash';\nimport * as aizattoDateFns from '@aizatto/date-fns';\n\nconst day = new Date();\nconst timeMin = dateFns.startOfDay(day);\nconst timeMax = dateFns.endOfDay(dateFns.addDays(day, 5));\n\nconst Attendees: React.FC<{event: gapi.client.calendar.Event}> = (props) => {\n  const event = props.event;\n\n  if (!event.attendees || !event.attendees.length) {\n    return <></>;\n  }\n\n  const attendees = event.attendees.sort((a, b) => {\n    if (a.displayName && !b.displayName) {\n      return 1;\n    } else if (!a.displayName && b.displayName) {\n      return -1;\n    }\n\n    return a.email.localeCompare(b.email);\n  });\n\n  const declined = attendees.filter(attendee => attendee.responseStatus === \"declined\");\n\n  const attendeesElement = attendees.map(attendee =>  {\n    const style = attendee.responseStatus === \"declined\"\n      ? {textDecoration: \"line-through\"}  \n      : {};\n\n    const name = attendee.displayName ? attendee.displayName : attendee.email;\n\n    return (\n      <li\n        key={`${event.id}:${attendee.email}`}\n        style={style}\n        title={`${name}: ${attendee.responseStatus}`}>\n        {name}\n      </li>\n    );\n  });\n\n  return (\n    <>\n      Attendees: {attendees.length - declined.length}/{attendees.length}\n      <ol>\n        {attendeesElement}\n      </ol>\n    </>\n  );\n}\n\nconst DateTime: React.FC<{event: gapi.client.calendar.Event}> = (props) => {\n  const event = props.event;\n  if (!event.start.dateTime ||\n      !event.end.dateTime) {\n    return <></>\n  }\n\n  const startDateTime =  new Date(event.start.dateTime);\n  const endDateTime = new Date(event.end.dateTime);\n\n  return (\n    <span title={`${event.start.dateTime} - ${event.end.dateTime}`}>\n      {dateFns.format(startDateTime, 'HH:mm')}\n      {' - '}\n      {dateFns.format(endDateTime, 'HH:mm')}\n    </span>\n  );\n}\n\nconst Intervals: React.FC<{intervals: {start: Date, end: Date}[]}> = (props) => {\n  const elements = props.intervals.map(interval => {\n    const seconds = (interval.end.getTime() - interval.start.getTime()) / 1000;\n\n    return (\n      <li key={interval.start.toISOString()}>\n        {dateFns.format(interval.start, 'HH:mm')} - {dateFns.format(interval.end, 'HH:mm')}\n        {': '}\n        {IntervalTime(seconds)}\n      </li>\n    )\n  });\n\n  return (\n    <ol>\n      {elements}\n    </ol>\n  )\n}\n\nconst IntervalTime = (seconds: number) => {\n  const hours = Math.floor(seconds / (60 * 60));\n  const minutes = Math.floor(seconds / 60) % 60;\n\n  let time = [];\n\n  if (hours > 1) {\n    time.push(`${hours} hours`)\n  } else if (hours === 1) {\n    time.push(`${hours} hour`)\n  }\n\n  if (minutes > 1) {\n    time.push(`${minutes} minutes`)\n  } else if (minutes === 1) {\n    time.push(`${minutes} minute`)\n  }\n\n  return time.join(' ');\n}\n\nconst Event: React.FC<{event: gapi.client.calendar.Event}> = (props) => {\n  const event = props.event;\n\n  const hangoutButton = event.hangoutLink\n    ? <a href={event.hangoutLink}>Hangout Link</a>\n    : <span style={{textDecoration: 'line-through'}}>Hangout Link</span>\n\n  const locationElement = event.location\n    ? <div>{event.location}</div>\n    : null;\n\n  return (\n    <>\n      <div>\n        <DateTime event={event} />\n        {' '}\n        <a href={event.htmlLink}>{event.summary}</a>\n      </div>\n      {locationElement}\n\n      <Attendees event={event} />\n\n      <div dangerouslySetInnerHTML={{__html: event.description}} />\n\n      {hangoutButton}\n    </>\n  );\n}\n\nexport const CalendarAuthenticated: React.FC = (props) => {\n  const [events, setEvents] = useState<gapi.client.calendar.Event[]>([]);\n  useEffect(() => {\n    (async () => {\n      const events = await gapi.client.calendar.events.list({\n        calendarId: 'primary',\n        timeMin: timeMin.toISOString(),\n        timeMax: timeMax.toISOString(),\n        maxResults: 100, \n        orderBy: 'startTime',\n        singleEvents: true,\n      });\n      setEvents(events.result.items);\n    })();\n  }, []);\n\n  const eventsFiltered = events.filter(\n    (event) => {\n      if (event.status === 'cancelled') {\n        return false;\n      }\n      \n      if (event.end.dateTime &&\n          dateFns.isBefore(new Date(event.end.dateTime), timeMin)) {\n        return false;\n      }\n\n      return true;\n    }\n  );\n\n  const eventsGroupBy = lodash.groupBy(\n    eventsFiltered,\n    (event) => {\n      if (!event.start.dateTime) {\n        return null;\n      }\n      return dateFns.startOfDay(new Date(event.start.dateTime))\n    });\n  \n  const days = lodash.map(eventsGroupBy, (events, dateStr) => {\n    const date = new Date(dateStr);\n    const intervals = events.filter(event => {\n      return event.start.dateTime && event.end.dateTime;\n    }).map(event => {\n      return {\n        // @ts-ignore\n        start: new Date(event.start.dateTime),\n        // @ts-ignore\n        end: new Date(event.end.dateTime),\n      }\n    });\n\n    const busyIntervals = aizattoDateFns.mergeIntervals(intervals);\n    const freeIntervals = aizattoDateFns.oppositeIntervals(\n      {\n        start: dateFns.startOfDay(date),\n        end: dateFns.endOfDay(date),\n      },\n      busyIntervals,\n    );\n\n    const eventsElements = events.map(event => {\n      return (\n        <li key={event.id} style={{paddingBottom: '1rem'}}>\n          <Event event={event} />\n        </li>\n      );\n    });\n\n    return (\n      <React.Fragment key={dateStr}>\n        <h5>{dateFns.format(date, 'EEEE yyyy-MM-dd')}</h5>\n\n        Busy: {IntervalTime(aizattoDateFns.intervalsTotal(busyIntervals) / 1000)}\n        <Intervals intervals={busyIntervals} />\n\n        Free: {IntervalTime(aizattoDateFns.intervalsTotal(freeIntervals) / 1000)}\n        <Intervals intervals={freeIntervals} />\n\n        Schedule: {eventsElements.length}\n        <ol>\n          {eventsElements}\n        </ol>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <>\n      {days}\n    </>\n  )\n}\n\nexport const Calendar: React.FC = (props) => {\n  return (\n    <>\n      <GoogleContext.Consumer>\n        {({authenticated}) => (\n          authenticated \n            ? <CalendarAuthenticated />\n            : <>Not Authenticated</>\n        )}\n      </GoogleContext.Consumer>\n    </>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport '../node_modules/bootstrap/scss/bootstrap.scss';\nimport { GoogleContext } from './contexts/GoogleContext';\nimport { Button, Container } from 'reactstrap';\nimport { Calendar } from './List';\n\nconst App: React.FC = () => {\n  const [authenticated, setAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    script.async = true;\n    script.defer = true;\n\n    const initClient = async () => {\n      const discoveryDocs = [\n        // https://developers.google.com/calendar/quickstart/js\n        \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"\n      ];\n      const scope = [\n        'https://www.googleapis.com/auth/calendar.events.readonly',\n        'https://www.googleapis.com/auth/calendar.readonly',\n      ].join(' ');\n      await gapi.client.init({\n        discoveryDocs,\n        scope,\n        apiKey: process.env.REACT_APP_GOOGLE_APP_ID,\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n      });\n\n      const GoogleAuth = gapi.auth2.getAuthInstance();\n      GoogleAuth.isSignedIn.listen((signedIn) => {\n        setAuthenticated(signedIn);\n      });\n      const googleUser = GoogleAuth.currentUser.get();\n      setAuthenticated(googleUser.isSignedIn());\n      console.log(googleUser.getBasicProfile());\n    }\n    script.onload = () => {\n      gapi.load('client:auth2', initClient);\n    }\n\n    const firstScript = document.getElementsByTagName('script')[0];\n    // @ts-ignore\n    firstScript.parentNode.insertBefore(script, firstScript);\n  }, []);\n\n  const signIn = () => {\n    gapi.auth2.getAuthInstance().signIn({\n      prompt: 'select_account',\n    });\n  }\n\n  const signOut = () => {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n\n  return (\n    <GoogleContext.Provider value={{authenticated}}>\n      <div className=\"App\">\n        {!authenticated\n          ? <Button onClick={signIn}>\n              Sign In\n            </Button>\n          : <Button onClick={signOut}>\n              Sign out\n            </Button>\n        }\n      </div>\n      <Container>\n        <Calendar />\n      </Container>\n    </GoogleContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dateFns = require(\"date-fns\");\nfunction mergeIntervals(unmergedIntervals) {\n    if (unmergedIntervals.length <= 1) {\n        return unmergedIntervals;\n    }\n    var mergedIntervals = [];\n    var currentInterval = unmergedIntervals[0];\n    for (var i = 1; i < unmergedIntervals.length; i++) {\n        var newInterval = unmergedIntervals[i];\n        var overlap = dateFns.areIntervalsOverlapping(currentInterval, newInterval);\n        if (!overlap) {\n            overlap = (newInterval.start.getTime() - currentInterval.end.getTime()) === 0;\n        }\n        if (overlap) {\n            currentInterval.start = dateFns.isBefore(currentInterval.start, newInterval.start)\n                ? currentInterval.start\n                : newInterval.start;\n            currentInterval.end = dateFns.isAfter(currentInterval.end, newInterval.end)\n                ? currentInterval.end\n                : newInterval.end;\n        }\n        else {\n            mergedIntervals.push(currentInterval);\n            currentInterval = newInterval;\n        }\n    }\n    mergedIntervals.push(currentInterval);\n    return mergedIntervals;\n}\nexports.mergeIntervals = mergeIntervals;\n/**\n * Assumed intervals is sorted, and merged\n */\nfunction oppositeIntervals(range, intervals) {\n    if (intervals.length === 0) {\n        return [range];\n    }\n    var newIntervals = [];\n    var currentInterval = Object.assign({}, range);\n    var startingIndex = 0;\n    if (dateFns.isWithinInterval(currentInterval.start, intervals[0])) {\n        currentInterval.start = intervals[0].end;\n        if (dateFns.isWithinInterval(currentInterval.end, intervals[0])) {\n            // The event is so large it takes the whole range\n            return [];\n        }\n        if (intervals[1]) {\n            currentInterval.end = intervals[1].start;\n            startingIndex = 1;\n        }\n    }\n    else {\n        currentInterval.end = intervals[0].start;\n        startingIndex = 0;\n        newIntervals.push(currentInterval);\n    }\n    for (var i = startingIndex; i < intervals.length; i++) {\n        var interval = intervals[i];\n        var nextInterval = intervals[i + 1];\n        var currentInterval_1 = {\n            start: interval.end,\n            end: nextInterval ? nextInterval.start : range.end,\n        };\n        newIntervals.push(currentInterval_1);\n    }\n    return newIntervals;\n}\nexports.oppositeIntervals = oppositeIntervals;\nfunction intervalsTotal(intervals) {\n    return intervals.reduce(function (accumulator, interval) {\n        return accumulator + interval.end.getTime() - interval.start.getTime();\n    }, 0);\n}\nexports.intervalsTotal = intervalsTotal;\n//# sourceMappingURL=fns.js.map"],"sourceRoot":""}